{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/comments/comments.component.css","webpack:///./src/app/comments/comments.component.html","webpack:///./src/app/comments/comments.component.ts","webpack:///./src/app/feed/feed.component.css","webpack:///./src/app/feed/feed.component.html","webpack:///./src/app/feed/feed.component.ts","webpack:///./src/app/login-form/login-form.component.css","webpack:///./src/app/login-form/login-form.component.html","webpack:///./src/app/login-form/login-form.component.ts","webpack:///./src/app/logs/logs.component.css","webpack:///./src/app/logs/logs.component.html","webpack:///./src/app/logs/logs.component.ts","webpack:///./src/app/register-form/register-form.component.css","webpack:///./src/app/register-form/register-form.component.html","webpack:///./src/app/register-form/register-form.component.ts","webpack:///./src/app/register-login/register-login.component.css","webpack:///./src/app/register-login/register-login.component.html","webpack:///./src/app/register-login/register-login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"html, body {\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.forms {\\r\\n    max-width: 350px;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n    text-align: center;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.topStrip {\\r\\n    margin-bottom: 25px;\\r\\n}\\r\\n\\r\\n.topStrip h3 {\\r\\n    color: white;\\r\\n    margin: 0 auto;\\r\\n}\"","module.exports = \"<div class=\\\"bg-primary topStrip\\\">\\r\\n  <h3>MEAN Social Network</h3>\\r\\n</div>\\r\\n<router-outlet>\\r\\n  \\r\\n</router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpModule, Http} from '@angular/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule }   from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { RouterModule } from '@angular/router';\r\nimport { FeedComponent } from './feed/feed.component';\r\nimport { RegisterFormComponent } from './register-form/register-form.component';\r\nimport { LoginFormComponent } from './login-form/login-form.component';\r\nimport { LogsComponent } from './logs/logs.component';\r\nimport { RegisterLoginComponent } from './register-login/register-login.component';\r\nimport { CommentsComponent } from './comments/comments.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FeedComponent,\r\n    RegisterFormComponent,\r\n    LoginFormComponent,\r\n    LogsComponent,\r\n    RegisterLoginComponent,\r\n    CommentsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      { \r\n        path: '',\r\n        component: RegisterLoginComponent\r\n      },\r\n      { \r\n        path: 'feed/:id_post/comments',\r\n        component: CommentsComponent\r\n      },\r\n      {\r\n        path: 'feed/page/:pageNr',\r\n        component: FeedComponent\r\n      },\r\n      { \r\n        path: 'logs', \r\n        component: LogsComponent \r\n      },\r\n      { \r\n        path: '**', \r\n        component: RegisterLoginComponent \r\n      }\r\n    ])\r\n  ],\r\n  providers: [FeedComponent, AppComponent, LogsComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".backFeed {\\r\\n    margin-bottom: 25px;\\r\\n}\\r\\n\\r\\n.postBody {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.commentSection {\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.commentBody {\\r\\n    margin-bottom: 25px;\\r\\n}\\r\\n\\r\\n.postButtons button{\\r\\n    margin: 10px 10px 0 0;\\r\\n}\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <button type=\\\"button\\\" (click)=\\\"returnToFeed(); \\\"class=\\\"btn btn-primary backFeed\\\">< Feed</button>\\n        <div class=\\\"card posts\\\">\\n          <div class=\\\"card-body postBody\\\">\\n            <h4 class=\\\"card-title\\\">{{ posts.title }}</h4>\\n            <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{ posts.dateCreated | date:'dd/MM/yyyy HH:mm' }}</h6>\\n            <p class=\\\"card-text\\\">{{ posts.content }}</p>\\n            <a href=\\\"#!\\\" class=\\\"card-link\\\">User: {{ posts.user.name }}</a>\\n            <a href=\\\"#!\\\" class=\\\"card-link\\\">Email: {{ posts.user.email }}</a>\\n\\n            <form class=\\\"postButtons\\\">\\n                <div *ngIf=\\\"posts.user.email == userEmail ; else postBtnDisable\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Edit</button>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n                </div>\\n\\n                <ng-template #postBtnDisable>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" disabled>Edit</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" disabled>Delete</button>\\n                </ng-template>\\n            </form> \\n          </div>\\n        </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n      <div class=\\\"card addPost\\\">\\n        <div class=\\\"card-body\\\">\\n          <form>\\n            <h5>Add a new comment</h5>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"commentText\\\">Comment:</label>  \\n              <textarea \\n                required\\n                ngModel\\n                name=\\\"commentText\\\"\\n                #commentText=\\\"ngModel\\\" \\n                class=\\\"form-control\\\" \\n                rows=\\\"3\\\" \\n                id=\\\"commentText\\\"></textarea>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div *ngIf=\\\"commentText.invalid ; else button_available\\\">\\n                <button disabled class=\\\"btn btn-outline-primary\\\">Publish</button>\\n              </div>\\n          \\n              <ng-template #button_available>\\n                <button type=\\\"button\\\" (click)=\\\"publishPost();\\\"class=\\\"btn btn-primary\\\">Publish</button>\\n              </ng-template>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 commentSection\\\">\\n      <h5>Comments:</h5>\\n      <ng-container *ngFor=\\\"let comment of comments\\\">\\n        <div class=\\\"card commentBody\\\">\\n          <div class=\\\"card-body\\\">\\n            <p class=\\\"card-text\\\">{{ comment.text }}</p>\\n            <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{ comment.dateCreated | date:'dd/MM/yyyy HH:mm' }}</h6>\\n            <a href=\\\"#!\\\" class=\\\"card-link\\\">User: {{ comment.user.name }}</a>\\n            <a href=\\\"#!\\\" class=\\\"card-link\\\">Email: {{ comment.user.email }}</a>\\n          </div>\\n        </div>\\n      </ng-container>\\n    </div> \\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent {\n  title = 'comment';\n  postId = localStorage.getItem('postId');\n  userEmail = localStorage.getItem('userEmail');\n  token = localStorage.getItem('token');\n  private apiUrlComments = 'http://localhost:3000/api/post/'+this.postId+'/comments'\n  private apiUrlPosts = 'http://localhost:3000/api/post/'+this.postId\n  comments: any = {};\n  posts: any = {};\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.getComments();\n    this.getPost();\n  }\n\n  getPost() {\n    return this.http.get(this.apiUrlPosts, {\n      headers:\n        new HttpHeaders()\n          .append('Authorization', 'Bearer ' + this.token)\n    }).subscribe(\n      res => {\n        this.posts = res;\n        console.log(this.posts);\n      },\n      err => {\n        console.log(err)\n      }\n    )\n  }\n\n  getComments(){\n    return this.http.get(this.apiUrlComments, {\n      headers:\n        new HttpHeaders()\n          .append('Authorization', 'Bearer ' + this.token)\n    }).subscribe(\n      res => {\n        this.comments = res;\n        console.log(this.comments);\n      },\n      err => {\n        console.log(err)\n      }\n    )\n  }\n\n  publishPost(){\n    var commentText = (<HTMLInputElement>document.getElementById('commentText')).value;\n\n    return this.http.post(this.apiUrlComments, {\n      \n      \"text\": commentText\n\n    },{\n      headers:\n        new HttpHeaders()\n          .append('Authorization', 'Bearer ' + this.token)\n    }).subscribe(\n      res => { \n        console.log(res);\n        this.getComments();\n        (<HTMLInputElement>document.getElementById('commentText')).value = \"\"\n      },\n      err => {\n        console.log(err)\n      }\n    );\n  }\n\n  returnToFeed(){\n    localStorage.removeItem('postId');\n    this.router.navigateByUrl('/feed/page/1');\n  }\n\n}\n","module.exports = \".posts {\\r\\n    margin-bottom: 25px;\\r\\n}\\r\\n\\r\\n.postBody {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.addPost {\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n.addPost label{\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n.center {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.pagination {\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\n.pagination a {\\r\\n    color: black;\\r\\n    float: left;\\r\\n    padding: 8px 16px;\\r\\n    text-decoration: none;\\r\\n    transition: background-color .3s;\\r\\n    border: 1px solid #ddd;\\r\\n    margin: 0 4px;\\r\\n}\\r\\n\\r\\n.pagination a.active {\\r\\n    background-color: #007BFF;\\r\\n    color: white;\\r\\n    border: 1px solid #007BFF;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"card \\\">\\n        <div class=\\\"card-body\\\">\\n          <h4>Bem vindo {{ nameUser }}</h4>\\n          <form>\\n            <div class=\\\"form-group\\\">\\n              <button type=\\\"button\\\"  (click)=\\\"logs();\\\" class=\\\"btn btn-outline-primary\\\">Logs</button>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <button type=\\\"button\\\" (click)=\\\"logout();\\\" class=\\\"btn btn-outline-danger\\\">Logout</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n\\n      <div class=\\\"card addPost\\\">\\n        <div class=\\\"card-body\\\">\\n          <form>\\n            <h5>Add a new post</h5>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"postTitle\\\">Title:</label>  \\n              <input\\n                required\\n                ngModel\\n                name=\\\"postTitle\\\"\\n                #postTitle=\\\"ngModel\\\"  \\n                type=\\\"text\\\" \\n                class=\\\"form-control\\\" \\n                id=\\\"postTitle\\\">\\n              <label for=\\\"postContent\\\">Content:</label>  \\n              <textarea \\n                required\\n                ngModel\\n                name=\\\"postContent\\\"\\n                #postContent=\\\"ngModel\\\" \\n                class=\\\"form-control\\\" \\n                rows=\\\"5\\\" \\n                id=\\\"postContent\\\"></textarea>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div *ngIf=\\\"postTitle.invalid || postContent.invalid ; else button_available\\\">\\n                <button disabled class=\\\"btn btn-outline-primary\\\">Publish</button>\\n              </div>\\n          \\n              <ng-template #button_available>\\n                <button type=\\\"button\\\" (click)=\\\"publishPost();\\\"class=\\\"btn btn-primary\\\">Publish</button>\\n              </ng-template>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n\\n      <h5>Posts:</h5>\\n      <ng-container *ngFor=\\\"let post of data.docs\\\">\\n        <div class=\\\"card posts\\\">\\n          <div class=\\\"card-body postBody\\\">\\n            <h4 class=\\\"card-title\\\">{{ post.title }}</h4>\\n            <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{ post.dateCreated | date:'dd/MM/yyyy HH:mm' }}</h6>\\n            <p class=\\\"card-text\\\">{{ post.content }}</p>\\n            <a href=\\\"#!\\\" class=\\\"card-link\\\">User: {{ post.user.name }}</a>\\n            <a href=\\\"#!\\\" class=\\\"card-link\\\">Email: {{ post.user.email }}</a>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"goToComment( post._id );\\\">Go to Post</button>\\n        </div>\\n      </ng-container>\\n\\n      <div class=\\\"center\\\">\\n        <div class=\\\"pagination\\\">\\n          <ng-container>\\n            <div *ngIf=\\\"splitUrl[1] == 1\\\">\\n              <a class=\\\"active\\\" href=\\\"/feed/page/1\\\">1</a>\\n              <a href=\\\"/feed/page/2\\\">2</a>\\n              <a href=\\\"/feed/page/3\\\">3</a>\\n              <a href=\\\"/feed/page/2\\\">&raquo;</a>\\n            </div>\\n            <div *ngIf=\\\"splitUrl[1] == 2\\\">\\n              <a href=\\\"/feed/page/1\\\">&laquo;</a>\\n              <a href=\\\"/feed/page/1\\\">1</a>\\n              <a class=\\\"active\\\" href=\\\"/feed/page/2\\\">2</a>\\n              <a href=\\\"/feed/page/3\\\">3</a>\\n              <a href=\\\"/feed/page/3\\\">&raquo;</a>\\n            </div>\\n            <div *ngIf=\\\"splitUrl[1] == 3\\\">\\n              <a href=\\\"/feed/page/2\\\">&laquo;</a>\\n              <a href=\\\"/feed/page/1\\\">1</a>\\n              <a href=\\\"/feed/page/2\\\">2</a>\\n              <a class=\\\"active\\\" href=\\\"/feed/page/3\\\">3</a>\\n            </div>\\n          </ng-container>\\n        </div>\\n      </div>\\n          \\n    </div>\\n  </div>\\n</div>\"","import { Component} from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'feed',\r\n  templateUrl: './feed.component.html',\r\n  styleUrls: ['./feed.component.css']\r\n})\r\nexport class FeedComponent {\r\n  \r\n  title = 'feed';\r\n  private apiUrlPOST = 'http://localhost:3000/api/post'\r\n  pageUrl = this.router.url;\r\n  splitUrl = this.pageUrl.split(\"/feed/page/\");\r\n  data: any = {};\r\n  dataComment: any = {};\r\n  nameUser = localStorage.getItem('nomeuser');\r\n  token = localStorage.getItem('token');\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    \r\n    this.getPosts(this.splitUrl[1]);\r\n  }\r\n\r\n  getPosts(page) {\r\n    return this.http.get('http://localhost:3000/api/post?page='+page+'&limit=15', {\r\n      headers:\r\n        new HttpHeaders()\r\n          .append('Authorization', 'Bearer ' + this.token)\r\n    }).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.data = res;\r\n\r\n      },\r\n      err => {\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n    this.router.navigateByUrl('');\r\n  }\r\n\r\n  logs() {\r\n    if(this.token){\r\n      this.router.navigateByUrl('/logs');\r\n    }\r\n  }\r\n\r\n  publishPost() {\r\n    var titleInput = (<HTMLInputElement>document.getElementById('postTitle')).value;\r\n    var contentInput = (<HTMLInputElement>document.getElementById('postContent')).value;\r\n\r\n    return this.http.post(this.apiUrlPOST, {\r\n      \r\n      \"title\": titleInput,\r\n      \"content\": contentInput\r\n\r\n    },{\r\n      headers:\r\n        new HttpHeaders()\r\n          .append('Authorization', 'Bearer ' + this.token)\r\n    }).subscribe(\r\n      res => { \r\n        console.log(res);\r\n        this.getPosts(this.splitUrl[1]);\r\n      },\r\n      err => {\r\n        console.log(err)\r\n      }\r\n    );\r\n  }\r\n\r\n  goToComment(postId) {\r\n    \r\n    console.log('PostId ' + postId);\r\n    localStorage.setItem('postId', postId);\r\n\r\n    this.router.navigateByUrl('/feed/'+postId+'/comments');\r\n    \r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<form class=\\\"forms\\\">\\n  <h4>Login</h4>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"emailLogin\\\">Email</label>\\n    <input \\n      required \\n      ngModel \\n      name=\\\"emailLogin\\\"\\n      #emailLogin=\\\"ngModel\\\" \\n      id=\\\"emailLogin\\\" \\n      type=\\\"email\\\"\\n      class=\\\"form-control\\\">\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"emailLogin.touched && !emailLogin.valid\\\">\\n      <div *ngIf=\\\"emailLogin.errors.required\\\">Email is required</div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"passwordLogin\\\">Password</label>\\n    <input \\n      required \\n      ngModel \\n      name=\\\"passwordLogin\\\"\\n      #passwordLogin=\\\"ngModel\\\"  \\n      id=\\\"passwordLogin\\\"\\n      type=\\\"password\\\"\\n      class=\\\"form-control\\\">\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"passwordLogin.touched && !passwordLogin.valid\\\">\\n      <div *ngIf=\\\"passwordLogin.errors.required\\\">Password is required</div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <div *ngIf=\\\"emailLogin.invalid || passwordLogin.invalid ; else button_available\\\">\\n      <button disabled class=\\\"btn btn-outline-primary\\\">Sign In</button>\\n    </div>\\n\\n    <ng-template #button_available>\\n      <button type=\\\"submit\\\" (click)=\\\"saveToken()\\\" class=\\\"btn btn-primary\\\">Sign Ip</button>\\n    </ng-template>\\n  </div>\\n</form>\"","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent {\n  title = 'login';\n  data: any = {};\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  postLogin(){\n\n    var emailInput = (<HTMLInputElement>document.getElementById('emailLogin')).value;\n    var passInput = (<HTMLInputElement>document.getElementById('passwordLogin')).value;\n\n    return this.http.post(\"http://localhost:3000/api/auth\", {\n      \n      \"email\": emailInput,\n      \"password\": passInput\n\n    }).pipe(map(data => data))\n  }\n\n  saveToken() {\n    this.postLogin();\n\n    this.postLogin().subscribe(data => {\n      console.log(data);\n      this.data = data;\n      \n      if(this.data.token){\n        localStorage.setItem('token', this.data.token);\n        localStorage.setItem('nomeuser', this.data.name);\n        localStorage.setItem('userEmail', this.data.email);\n        this.router.navigateByUrl('feed/page/1');\n      }\n    },\n    err => {\n      console.log(err)\n    })\n  }\n\n}\n","module.exports = \".card {\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n.sections {\\r\\n    margin-top: 40px;\\r\\n}\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div clas=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h4>Posts</h4>\\n\\n      <ng-container *ngFor=\\\"let logs of data.logs\\\">\\n        <div *ngIf='logs.entityType === \\\"POST\\\"'>\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                <p>Id: {{ logs.entity.post }}</p>\\n                <p>Title: {{ logs.entity.tile }}</p>\\n                <p>Content: {{ logs.entity.content }}</p>\\n                <p>Date: {{ logs.date }}</p> \\n              </div>\\n            </div>\\n        </div>\\n      </ng-container>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div clas=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h4>Comments</h4>\\n\\n      <ng-container *ngFor=\\\"let logs of data.logs\\\">\\n        <div *ngIf='logs.entityType === \\\"COMMENT\\\"'>\\n          <div class=\\\"card\\\" ng-model=\\\"myVar\\\">\\n            <div class=\\\"card-body\\\">\\n              <p>Id: {{ logs.entity.post }}</p>\\n              <p>Text: {{ logs.entity.text }}</p>\\n              <p>Date: {{ logs.date }}</p>   \\n            </div>\\n          </div>\\n        </div>\\n      </ng-container>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div clas=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h4>Account Details</h4>\\n\\n        <ng-container *ngFor=\\\"let logs of data.logs\\\">\\n          <div *ngIf='logs.entityType === \\\"USER\\\"'>\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                <p>Name: {{ logs.entity.name }}</p>\\n                <p>Email: {{ logs.entity.email }}</p>\\n                <p>Date: {{ logs.date }}</p>\\n              </div>\\n            </div>\\n          </div>\\n        </ng-container>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.css']\n})\nexport class LogsComponent {\n  title = 'logs';\n  private apiUrl = 'http://localhost:3000/api/user/logs';\n  data: any = {};\n\n  constructor(private http: HttpClient) {\n    this.getLogs();\n  }\n\n  getData() {\n    var token = localStorage.getItem('token');\n\n    return this.http.get(this.apiUrl, {\n      headers:\n        new HttpHeaders()\n          .append('Authorization', 'Bearer ' + token)\n    }).pipe(map(data => data))\n  }\n\n  getLogs() {\n    this.getData();\n\n    this.getData().subscribe(data => {\n      console.log(data);\n      this.data = data;\n    })\n    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form>\\n  <h4>Register</h4>\\n  <div class=\\\"form-group\\\" >\\n    <label for=\\\"nomeRegister\\\">Nome</label>\\n    <input  \\n    required\\n    ngModel \\n    name=\\\"nomeRegister\\\"\\n    #nomeRegister=\\\"ngModel\\\" \\n    id=\\\"nomeRegister\\\"\\n    type=\\\"text\\\" \\n    class=\\\"form-control\\\">\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"nomeRegister.touched && !nomeRegister.valid \\\">\\n      <div *ngIf=\\\"nomeRegister.errors.required\\\">Name is required</div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"emailRegister\\\">Email</label>\\n    <input \\n      required\\n      ngModel \\n      name=\\\"emailRegister\\\"\\n      #emailRegister=\\\"ngModel\\\"\\n      id=\\\"emailRegister\\\"\\n      type=\\\"email\\\" \\n      class=\\\"form-control\\\">\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"emailRegister.touched && !emailRegister.valid \\\">\\n        <div *ngIf=\\\"emailRegister.errors.required\\\">Email is required</div>\\n      </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"passwordRegister\\\">Password</label>\\n    <input\\n      required\\n      ngModel \\n      name=\\\"passwordRegister\\\"\\n      #passwordRegister=\\\"ngModel\\\"\\n      id=\\\"passwordRegister\\\" \\n      type=\\\"password\\\" \\n      class=\\\"form-control\\\">\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"passwordRegister.touched && !passwordRegister.valid \\\">\\n        <div *ngIf=\\\"passwordRegister.errors.required\\\">Password is required</div>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <div *ngIf=\\\"nomeRegister.invalid || emailRegister.invalid || passwordRegister.invalid ; else button_available\\\">\\n      <button disabled class=\\\"btn btn-outline-primary\\\">Sign Up</button>\\n    </div>\\n\\n    <ng-template #button_available>\\n      <button type=\\\"submit\\\" (click)=\\\"postRegister();\\\" class=\\\"btn btn-primary\\\">Sign Up</button>\\n    </ng-template>\\n    \\n  </div>\\n</form>\"","import { Component} from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.css']\n})\nexport class RegisterFormComponent {\n  title = 'register';\n  data: any = {};\n\n  constructor(private http: HttpClient) {\n  }\n\n  postRegister(){\n\n    var emailInput = (<HTMLInputElement>document.getElementById('emailRegister')).value;\n    var nameInput = (<HTMLInputElement>document.getElementById('nomeRegister')).value;\n    var passInput = (<HTMLInputElement>document.getElementById('passwordRegister')).value;\n\n    this.http.post(\"http://localhost:3000/api/auth/register\", {\n      \n      \"email\": emailInput,\n      \"password\": passInput,\n      \"name\": nameInput\n\n    }).subscribe(\n      res => { \n        console.log(res);\n        this.data = res;\n      },\n      err => {\n        console.log(err)\n      }\n    );\n  }\n}","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->   \\n<div class=\\\"container \\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <register-form></register-form>\\n      </div>\\n\\n      <div class=\\\"col-md-6\\\">\\n        <login-form></login-form>\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'register-login',\n  templateUrl: './register-login.component.html',\n  styleUrls: ['./register-login.component.css']\n})\nexport class RegisterLoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}