swagger: '2.0'
info:
  title: MEAN Social Network
  version: '1.0'
  contact:
    email: joao_mff@hotmail.com
host: localhost
basePath: /api
tags:
  - name: auth
    description: Authentication endpoints
  - name: user
    description: User related endpoints
  - name: post
    description: Endpoints related to posts
schemes:
  - http
paths:
  /auth:
    post:
      tags:
        - auth
      summary: Login endpoint
      description: ''
      operationId: Login
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User login credentials
          required: true
          schema:
            $ref: '#/definitions/UserLogin'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AuthResult'
        '400':
          description: bad request, for example wrong credentials
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: internal server error
          schema:
            $ref: '#/definitions/ErrorMessage'
  /auth/register:
    post:
      tags:
        - auth
      summary: Endpoint to create new users
      description: ''
      operationId: AuthRegister
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Credentials and name
          required: true
          schema:
            $ref: '#/definitions/UserRegister'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AuthResult'
        '400':
          description: bad request, for example wrong credentials
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: internal server error
          schema:
            $ref: '#/definitions/ErrorMessage'
  /user/logs:
    get:
      tags:
        - user
      summary: Endpoint to fetch all the user logs
      description: ''
      operationId: UserLogs
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LogsResult'
        '400':
          description: bad request, for example wrong credentials
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: internal server error
          schema:
            $ref: '#/definitions/ErrorMessage'
  /post:
    get:
      tags:
        - post
      summary: Endpoint to fetch all available posts
      description: ''
      operationId: GetPosts
      parameters:
        - in: path
          name: page
          required: true
          schema:
            type: integer
            minimum: 1
          description: The page of posts to fetch
        - in: path
          name: limit
          required: false
          schema:
            type: integer
            default: 15
          description: The number of results to fetch per page
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PostsResult'
        '400':
          description: bad request, for example wrong credentials
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: internal server error
          schema:
            $ref: '#/definitions/ErrorMessage'
    post:
      tags:
        - post
      summary: Enpoint to add a new post
      description: ''
      operationId: AddPost
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: title and content of a post
          required: true
          schema:
            $ref: '#/definitions/Post'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PostResult'
        '400':
          description: bad request, for example wrong credentials
          schema:
            $ref: '#/definitions/ErrorMessage'
        '500':
          description: internal server error
          schema:
            $ref: '#/definitions/ErrorMessage'
      
definitions:
  UserLogin:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
  AuthResult:
    type: object
    properties:
      token:
        type: string
      email:
        type: string
      name:
        type: string
  ErrorMessage:
    type: object
    properties:
      message:
        type: string
  UserRegister:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      name:
        type: string
    required: 
      - email
      - password
      - name
  LogsResult:
    type: array
    items:
      type: object
      properties:
        date:
          type: string
          format: date
        entityId:
          type: number
        entityType:
          type: string
          enum:
            - USER
            - POST
            - COMMENT
        action:
          type: string
          enum:
            - CREATE
            - READ
            - UPDATE
            - DELETE
  PostsResult:
    type: object
    properties:
      docs:
        type: array
        items:
          type: object
          properties:
            dateCreated:
              type: string
              format: date
            _id:
              type: number
            user:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
            title:
              type: string
            content:
              type: string
      total:
        type: number
      limit:
        type: number
      page:
        type: number
      pages:
        type: number
  Post:
    type: object
    properties:
      title:
        type: string
      content:
        type: string
  PostResult:
    type: object
    properties:
      title:
        type: string
      content:
        type: string
      dateCreated:
        type: string
        format: date